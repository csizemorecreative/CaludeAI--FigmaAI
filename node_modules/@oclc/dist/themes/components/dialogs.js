import tokenData from '../../design-tokens/base-tokens.json';
export const MuiModal = {
    styleOverrides: {
        root: {
            '& > .MuiBox-root': {
                position: 'absolute',
                top: '50%',
                left: '50%',
                transform: 'translate(-50%, -50%)',
                width: 400,
                backgroundColor: tokenData.tokens.palette.background.white,
                borderRadius: 6,
                padding: '16px'
            }
        }
    }
};
export const MuiDialog = {
    styleOverrides: {
        root: ({ theme }) => ({
            '& .MuiDialogTitle-root': {
                color: tokenData.tokens.palette.background.white,
                background: tokenData.tokens.palette.blue.blue700,
                padding: 12,
                fontWeight: 700,
                marginBottom: theme.spacing(3),
                ...theme.typography.labelLg
            },
            '& .MuiDialog-container': {
                '& .MuiDialog-paper': {
                    '& .MuiDialogTitle-root + .MuiIconButton-root': {
                        color: tokenData.tokens.palette.background.white,
                        position: 'absolute',
                        right: 8,
                        top: 8,
                        '&:hover': {
                            color: `${tokenData.tokens.palette.background.white}`,
                            backgroundColor: 'rgba(0, 0, 0, 0.08)'
                        },
                        '&.Mui-focusVisible': {
                            backgroundColor: 'rgba(0, 0, 0, 0.08) !important'
                        },
                        '& > span': {
                            display: 'none'
                        }
                    }
                }
            },
            '& .MuiDialogContentText-root': {
                color: tokenData.tokens.palette.text.text300,
                marginBottom: '8px',
                '& .MuiSvgIcon-root': {
                    verticalAlign: 'middle'
                }
            },
            '&& .MuiDialogContent-root': {
                paddingTop: 0,
                paddingBottom: theme.spacing(3),
                paddingLeft: 12,
                paddingRight: 12
            },
            '& .MuiDialogActions-root': {
                '& .MuiButton-contained': {
                    '&:hover': {
                        backgroundColor: `${tokenData.tokens.palette.blue.blue700} !important` //Note: WS UI Specific styling
                    }
                }
            }
        }),
        container: {
            '& .MuiDialog-paper': {
                minWidth: 150
            }
        }
    }
};
export const MuiDialogActions = {
    styleOverrides: {
        root: ({ theme }) => ({
            background: tokenData.tokens.palette.background.linen,
            padding: 12,
            [theme.breakpoints.down('sm')]: {
                display: 'grid',
                gridAutoFlow: 'row',
                rowGap: '16px',
                justifyContent: 'stretch',
                '& .MuiButton-root:first-of-type': {
                    marginLeft: 0,
                    order: 2
                },
                '& .MuiButton-root:nth-of-type(2)': {
                    marginLeft: 0,
                    order: 1
                },
                '& .MuiButton-root:nth-of-type(3)': {
                    marginLeft: 0,
                    order: 3
                }
            },
            [theme.breakpoints.up('sm')]: {
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'flex-end',
                '& .MuiButton-root:first-of-type': {
                    order: 2,
                    marginLeft: 0
                },
                '& .MuiButton-root:nth-of-type(2)': {
                    order: 3
                },
                '& .MuiButton-root:nth-of-type(3)': {
                    order: 1,
                    marginRight: 'auto',
                    marginLeft: 0
                }
            }
        })
    }
};
export const MuiBackdrop = {
    styleOverrides: {
        root: {
            //the rgba opacity value take's precedence over the opacity CSS property
            '&:not(.MuiBackdrop-invisible)': {
                backgroundColor: 'rgba(12, 68, 112, .38)'
            },
            '> span.MuiCircularProgress-root': {
                color: tokenData.tokens.palette.text.text300
            },
            '* > span.MuiCircularProgress-root': {
                color: tokenData.tokens.palette.text.text300
            }
        }
    }
};
