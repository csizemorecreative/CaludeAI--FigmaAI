import { jsx as _jsx } from "react/jsx-runtime";
import tokenData from '../../design-tokens/base-tokens.json';
import Alert from 'mdi-material-ui/Alert';
import AlertBox from 'mdi-material-ui/AlertBox';
import CheckCircle from 'mdi-material-ui/CheckCircle';
import ChevronRight from 'mdi-material-ui/ChevronRight';
import InformationVariantCircle from 'mdi-material-ui/InformationVariantCircle';
import ExpandMoreIcon from 'mdi-material-ui/ChevronDown';
export const MuiDivider = {
    styleOverrides: {
        root: {
            borderColor: tokenData.tokens.palette.grey.grey500,
            '&:before, &:after': {
                borderColor: tokenData.tokens.palette.grey.grey500
            }
        }
    }
};
export const MuiTooltip = {
    defaultProps: {
        arrow: true
    },
    styleOverrides: {
        tooltip: ({ theme, ownerState }) => ({
            backgroundColor: tokenData.tokens.palette.grey.grey600,
            color: tokenData.tokens.palette.background.white,
            paddingTop: theme.spacing(1),
            paddingBottom: theme.spacing(1),
            paddingLeft: 6,
            paddingRight: 6,
            ...theme.typography.body1,
            boxShadow: '0px 1px 8px 0px rgba(0, 0, 0, 0.12), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 3px 3px -2px rgba(0, 0, 0, 0.2)',
            ...(!ownerState.arrow && {
                '&.MuiTooltip-tooltipPlacementBottom': {
                    marginTop: '7px !important',
                    marginBottom: '7px !important'
                },
                '&.MuiTooltip-tooltipPlacementTop': {
                    marginTop: '7px !important',
                    marginBottom: '7px !important'
                }
            })
        }),
        tooltipPlacementBottom: {
            '& .MuiTooltip-arrow': {
                filter: 'none'
            }
        },
        arrow: {
            color: tokenData.tokens.palette.grey.grey600,
            filter: 'drop-shadow(2px 3px 6px black)'
        }
    }
};
export const MuiLink = {
    styleOverrides: {
        root: {
            color: tokenData.tokens.palette.blue.blue700,
            textDecorationColor: tokenData.tokens.palette.blue.blue700,
            '&:hover': {
                color: tokenData.tokens.palette.blue.blue800,
                textDecorationColor: tokenData.tokens.palette.blue.blue800,
                textDecorationThickness: '2px'
            },
            '&:visited': {
                color: tokenData.tokens.palette.purple.purple500,
                textDecorationColor: tokenData.tokens.palette.purple.purple500
            },
            '&.Mui-focusVisible': {
                outlineOffset: '3px',
                outlineStyle: 'solid',
                outlineWidth: '2px',
                outlineColor: tokenData.tokens.palette.text.text300,
                borderRadius: '6px',
                boxShadow: `0px 0px 0px 2px ${tokenData.tokens.palette.background.white}`
            }
        }
    }
};
export const MuiAlert = {
    defaultProps: {
        variant: 'outlined',
        iconMapping: {
            error: _jsx(AlertBox, { fontSize: "medium" }),
            warning: _jsx(Alert, { fontSize: "medium" }),
            success: _jsx(CheckCircle, { fontSize: "medium" }),
            info: _jsx(InformationVariantCircle, { color: "info", fontSize: "medium" })
        }
    },
    styleOverrides: {
        root: ({ theme }) => ({
            color: tokenData.tokens.palette.text.text300,
            paddingTop: theme.spacing(1),
            paddingBottom: theme.spacing(1),
            paddingLeft: 6,
            paddingRight: 4,
            alignItems: 'center',
            boxShadow: '0px 2px 1px rgba(0, 0, 0, 0.2), 0px 2px 2px rgba(0, 0, 0, 0.14), 0px 1px 5px rgba(0, 0, 0, 0.12)',
            '& .MuiSvgIcon-root': {
                lineHeight: 1
            },
            '& .MuiAlertTitle-root': {
                marginTop: 0
            }
        }),
        outlined: {
            border: `1px solid transparent`,
            borderLeftWidth: '8px'
        },
        filled: {
            borderLeft: '8px solid transparent',
            backgroundColor: tokenData.tokens.palette.background.linen
        },
        standard: {
            boxShadow: 'none',
            backgroundColor: 'transparent'
        },
        outlinedSuccess: {
            borderColor: tokenData.tokens.palette.green.green500,
            '& .MuiAlert-icon': {
                color: tokenData.tokens.palette.green.green500
            }
        },
        filledSuccess: {
            borderLeftColor: tokenData.tokens.palette.green.green500,
            '& .MuiAlert-icon': {
                color: tokenData.tokens.palette.green.green500
            }
        },
        standardSuccess: {
            '& .MuiAlert-icon': {
                color: tokenData.tokens.palette.green.green500
            }
        },
        outlinedInfo: {
            borderColor: tokenData.tokens.palette.purple.purple600
        },
        filledInfo: {
            borderLeftColor: tokenData.tokens.palette.purple.purple600
        },
        outlinedWarning: {
            borderColor: tokenData.tokens.palette.yellow.yellow400,
            '& .MuiAlert-icon': {
                color: tokenData.tokens.palette.yellow.yellow400
            }
        },
        filledWarning: {
            borderLeftColor: tokenData.tokens.palette.yellow.yellow400,
            '& .MuiAlert-icon': {
                color: tokenData.tokens.palette.yellow.yellow400
            }
        },
        standardWarning: {
            '& .MuiAlert-icon': {
                color: tokenData.tokens.palette.yellow.yellow400
            }
        },
        outlinedError: {
            borderColor: tokenData.tokens.palette.red.red600,
            '& .MuiAlert-icon': {
                color: tokenData.tokens.palette.red.red600
            }
        },
        filledError: {
            borderLeftColor: tokenData.tokens.palette.red.red600,
            '& .MuiAlert-icon': {
                color: tokenData.tokens.palette.red.red600
            }
        },
        standardError: {
            '& .MuiAlert-icon': {
                color: tokenData.tokens.palette.red.red600
            }
        },
        message: ({ theme }) => ({
            padding: 0,
            ...theme.typography.body1,
            '& > a': {
                color: tokenData.tokens.palette.text.text300,
                '&:hover': {
                    textDecorationThickness: '2px'
                }
            }
        }),
        icon: {
            marginRight: 8,
            padding: 0
        },
        action: {
            marginRight: 0,
            paddingTop: 0,
            alignItems: 'center'
        }
    }
};
export const MuiFormControl = {
    styleOverrides: {
        root: ({ ownerState, theme }) => ({
            ...(ownerState.component === 'fieldset' && {
                '& .MuiFormLabel-root': {
                    color: tokenData.tokens.palette.text.text100,
                    ...theme.typography.label,
                    '&.Mui-focused:not(.Mui-error)': {
                        color: tokenData.tokens.palette.text.text100
                    },
                    '&.Mui-error': {
                        color: tokenData.tokens.palette.red.red600
                    }
                },
                '& .MuiFormControlLabel-root': {
                    marginBottom: '2px'
                }
            }),
            '& .MuiFormGroup-root': {
                marginLeft: '9px'
            },
            '& .MuiFormGroup-row': {
                '& .MuiFormControlLabel-root': {
                    marginTop: '11px',
                    marginRight: '24px',
                    marginBottom: '10px'
                }
            },
            '&.MuiFormControl-marginDense': {
                margin: theme.spacing(1, 0, 0.5, 0)
            },
            '&.MuiFormControl-marginNormal': {
                margin: theme.spacing(2, 0, 1, 0)
            }
        })
    }
};
export const MuiPagination = {
    defaultProps: {
        showFirstButton: true,
        showLastButton: true,
        shape: 'rounded',
        boundaryCount: 0
    }
};
export const MuiPaginationItem = {
    styleOverrides: {
        root: ({ theme }) => ({
            minHeight: 'unset',
            height: theme.spacing(6.5),
            minWidth: theme.spacing(6.5),
            ...theme.typography.body1,
            color: tokenData.tokens.palette.text.text200,
            margin: '0 2px',
            '&.Mui-selected': {
                backgroundColor: tokenData.tokens.palette.darkBlue.darkBlue200,
                color: tokenData.tokens.palette.text.text300,
                fontWeight: 600,
                '&:hover': {
                    backgroundColor: tokenData.tokens.palette.darkBlue.darkBlue600,
                    color: tokenData.tokens.palette.background.white
                }
            },
            '&.MuiPaginationItem-ellipsis': {
                display: 'none'
            },
            '&:hover:not(.MuiPaginationItem-ellipsis)': {
                backgroundColor: tokenData.tokens.palette.darkBlue.darkBlue600,
                color: tokenData.tokens.palette.background.white
            },
            '&.Mui-disabled': {
                opacity: 1,
                color: tokenData.tokens.palette.grey.disabled,
                '& .MuiButton-root': {
                    color: tokenData.tokens.palette.grey.disabled,
                    '& .MuiButton-startIcon': {
                        color: tokenData.tokens.palette.grey.disabled
                    },
                    '& .MuiButton-endIcon': {
                        color: tokenData.tokens.palette.grey.disabled
                    }
                },
                '&.Mui-selected': {
                    color: tokenData.tokens.palette.grey.disabled,
                    borderColor: tokenData.tokens.palette.grey.disabled
                }
            },
            '&.Mui-focusVisible': {
                backgroundColor: tokenData.tokens.palette.darkBlue.darkBlue600,
                color: tokenData.tokens.palette.background.white,
                outlineOffset: '3px',
                outlineStyle: 'solid',
                outlineWidth: '2px',
                outlineColor: tokenData.tokens.palette.text.text300,
                boxShadow: `0px 0px 0px 2px ${tokenData.tokens.palette.background.white}`,
                '&.Mui-selected': {
                    backgroundColor: tokenData.tokens.palette.darkBlue.darkBlue600,
                    color: tokenData.tokens.palette.background.white,
                    outlineOffset: '3px',
                    outlineStyle: 'solid',
                    outlineWidth: '2px',
                    outlineColor: tokenData.tokens.palette.text.text300,
                    boxShadow: `0px 0px 0px 2px ${tokenData.tokens.palette.background.white}`,
                }
            },
            '& .MuiButton-root': {
                fontSize: tokenData.tokens.typography.body.fontSize,
                fontWeight: 400,
                '&:hover': {
                    color: tokenData.tokens.palette.text.text300,
                    backgroundColor: 'transparent'
                },
                '& .MuiButton-startIcon': {
                    color: tokenData.tokens.palette.text.text300
                },
                '& .MuiButton-endIcon': {
                    color: tokenData.tokens.palette.text.text300
                }
            },
            '& .MuiTouchRipple-root': {
                display: 'none'
            }
        }),
        outlined: {
            borderColor: tokenData.tokens.palette.grey.grey300,
            '&.Mui-selected': {
                borderColor: tokenData.tokens.palette.grey.grey500,
                backgroundColor: tokenData.tokens.palette.darkBlue.darkBlue200,
                color: tokenData.tokens.palette.text.text300,
                '&:hover': {
                    borderColor: tokenData.tokens.palette.darkBlue.darkBlue500,
                    backgroundColor: tokenData.tokens.palette.darkBlue.darkBlue600,
                    color: tokenData.tokens.palette.background.white
                }
            },
            '&:hover': {
                borderColor: tokenData.tokens.palette.darkBlue.darkBlue500,
                backgroundColor: tokenData.tokens.palette.background.white,
                color: tokenData.tokens.palette.blue.blue700
            },
            '&.Mui-disabled': {
                opacity: 1,
                color: tokenData.tokens.palette.grey.disabled,
                borderColor: tokenData.tokens.palette.grey.disabled,
                '& .MuiButton-root': {
                    color: tokenData.tokens.palette.grey.disabled,
                    borderColor: tokenData.tokens.palette.grey.disabled,
                    '& .MuiButton-startIcon': {
                        color: tokenData.tokens.palette.grey.disabled
                    },
                    '& .MuiButton-endIcon': {
                        color: tokenData.tokens.palette.grey.disabled
                    }
                }
            },
            '& .MuiButton-root': {
                fontSize: tokenData.tokens.typography.body.fontSize,
                fontWeight: 400,
                '&:hover': {
                    color: tokenData.tokens.palette.blue.blue700,
                    backgroundColor: 'transparent',
                    '& .MuiButton-startIcon': {
                        color: tokenData.tokens.palette.blue.blue700
                    },
                    '& .MuiButton-endIcon': {
                        color: tokenData.tokens.palette.blue.blue700
                    }
                },
                '& .MuiButton-startIcon': {
                    color: tokenData.tokens.palette.text.text300
                },
                '& .MuiButton-endIcon': {
                    color: tokenData.tokens.palette.text.text300
                }
            }
        },
        sizeSmall: ({ theme }) => ({
            height: theme.spacing(6),
            minWidth: theme.spacing(6),
            ...(theme.spacing(1) === '4px' ? theme.typography.body1 : theme.typography.body2),
            margin: '0 2px'
        }),
        sizeLarge: ({ theme }) => ({
            height: theme.spacing(8),
            minWidth: theme.spacing(8),
            ...theme.typography.body1
        })
    }
};
export const MuiBreadcrumbs = {
    defaultProps: {
        separator: _jsx(ChevronRight, {})
    },
    styleOverrides: {
        root: ({ theme }) => ({
            ...theme.typography.body2,
            color: tokenData.tokens.palette.text.text100
        }),
        separator: {
            marginLeft: 4,
            marginRight: 4,
            '& .MuiSvgIcon-root': {
                fontSize: 16,
                color: tokenData.tokens.palette.grey.grey400
            }
        },
        ol: {
            '& > li > button': {
                backgroundColor: 'transparent',
                color: '#000000',
                '&:hover': {
                    backgroundColor: tokenData.tokens.palette.purple.purple100
                },
                '&.Mui-focusVisible': {
                    textDecoration: 'none',
                    borderRadius: '6px',
                    outlineOffset: '2px',
                    outlineStyle: 'solid',
                    outlineWidth: '2px',
                    outlineColor: tokenData.tokens.palette.text.text300,
                    boxShadow: `0px 0px 0px 2px ${tokenData.tokens.palette.background.white}`,
                    backgroundColor: tokenData.tokens.palette.grey.grey200,
                    color: tokenData.tokens.palette.text.text300
                },
                '& .MuiTouchRipple-root': {
                    display: 'none'
                }
            }
        },
        li: ({ theme }) => ({
            '& .MuiLink-root': {
                display: 'flex',
                alignItems: 'center',
                columnGap: '4px',
                ...theme.typography.body2,
                color: tokenData.tokens.palette.text.text100,
                '&:visited': {
                    color: tokenData.tokens.palette.text.text100,
                    textDecorationColor: tokenData.tokens.palette.text.text100
                },
                '&:hover': {
                    color: tokenData.tokens.palette.text.text300,
                    textDecorationColor: tokenData.tokens.palette.text.text300,
                    textDecorationThickness: '2px'
                },
                '&.Mui-focusVisible': {
                    textDecoration: 'none',
                    borderRadius: '6px',
                    outlineOffset: '2px',
                    outlineStyle: 'solid',
                    outlineWidth: '2px',
                    outlineColor: tokenData.tokens.palette.text.text300,
                    backgroundColor: tokenData.tokens.palette.grey.grey200,
                    color: tokenData.tokens.palette.text.text300,
                    boxShadow: `0px 0px 0px 2px ${tokenData.tokens.palette.background.white}`
                },
                '& .MuiSvgIcon-root': {
                    fontSize: '16px'
                }
            },
            '& > p': {
                ...theme.typography.body2,
                color: tokenData.tokens.palette.text.text300,
                display: 'flex',
                alignItems: 'center',
                columnGap: '4px',
                '& .MuiSvgIcon-root': {
                    fontSize: '16px'
                }
            }
        })
    }
};
export const MuiCircularProgress = {
    defaultProps: {
        thickness: 5.5
    },
    styleOverrides: {
        root: {
            '@media (prefers-reduced-motion)': {
                animationDuration: '3.4s'
            }
        },
        circle: {
            strokeLinecap: 'round'
        }
    }
};
export const MuiLinearProgress = {
    styleOverrides: {
        root: {
            height: '8px',
            borderRadius: '17px',
            backgroundColor: tokenData.tokens.palette.darkBlue.darkBlue200
        },
        bar: {
            borderRadius: '19px'
        }
    }
};
export const MuiAccordion = {
    defaultProps: {
        square: true,
        disableGutters: true
    },
    styleOverrides: {
        root: {
            boxShadow: 'none',
            borderBottom: `1px solid ${tokenData.tokens.palette.grey.grey200}`,
            '&:before': {
                content: 'none'
            }
        }
    }
};
export const MuiAccordionSummary = {
    defaultProps: {
        expandIcon: _jsx(ExpandMoreIcon, { fontSize: "large" })
    },
    styleOverrides: {
        root: ({ theme }) => ({
            flexDirection: 'row-reverse',
            paddingTop: theme.spacing(2),
            paddingBottom: theme.spacing(2),
            paddingLeft: 12,
            paddingRight: 12,
            columnGap: '8px',
            minHeight: 'unset',
            ...theme.typography.label,
            '&.Mui-focusVisible': {
                backgroundColor: tokenData.tokens.palette.blue.blue100,
                outlineStyle: 'solid',
                outlineWidth: '2px',
                outlineColor: tokenData.tokens.palette.text.text300,
                outlineOffset: '2px',
                zIndex: 999,
                boxShadow: `0px 0px 0px 2px ${tokenData.tokens.palette.background.white}`
            },
            '&:hover:not(.Mui-disabled)': {
                backgroundColor: tokenData.tokens.palette.blue.blue100
            },
            '&.Mui-disabled': {
                opacity: 1,
                '& .MuiAccordionSummary-content': {
                    color: tokenData.tokens.palette.grey.disabled
                },
                '& .MuiAccordionSummary-expandIconWrapper': {
                    color: tokenData.tokens.palette.grey.disabled
                }
            }
        }),
        content: ({ theme }) => ({
            fontWeight: 600,
            color: tokenData.tokens.palette.text.text300,
            ...theme.typography.label,
            margin: 0,
            '&.Mui-expanded': {
                margin: 0
            }
        }),
        expandIconWrapper: {
            color: tokenData.tokens.palette.text.text100
        }
    }
};
export const MuiAccordionDetails = {
    styleOverrides: {
        root: ({ theme }) => ({
            paddingTop: theme.spacing(3),
            paddingBottom: theme.spacing(3),
            paddingRight: 12,
            paddingLeft: 36,
            color: tokenData.tokens.palette.text.text300
        })
    }
};
export const MuiBadge = {
    defaultProps: {
        max: 99
    },
    styleOverrides: {
        badge: ({ theme }) => ({
            color: tokenData.tokens.palette.background.white,
            backgroundColor: tokenData.tokens.palette.purple.purple600,
            outline: `1px solid ${tokenData.tokens.palette.background.white}`,
            ...theme.typography.labelSm,
            padding: '0px 5px',
            borderRadius: '100px'
        }),
        dot: {
            color: tokenData.tokens.palette.background.white,
            backgroundColor: tokenData.tokens.palette.purple.purple600,
            minHeight: '10px',
            minWidth: '10px',
            borderRadius: '100px'
        }
    }
};
