"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MuiToggleButtonGroup = exports.MuiToggleButton = void 0;
const base_tokens_json_1 = __importDefault(require("../../design-tokens/base-tokens.json"));
exports.MuiToggleButton = {
    defaultProps: {
        disableFocusRipple: true
    },
    styleOverrides: {
        root: ({ theme }) => ({
            color: '#546878',
            borderRadius: '3px',
            ...theme.typography.label,
            border: '1px solid transparent',
            textTransform: 'none',
            '&.Mui-focusVisible': {
                outlineStyle: 'solid',
                outlineWidth: '2px',
                outlineColor: base_tokens_json_1.default.tokens.palette.text.text300
            },
            '&:hover': {
                color: base_tokens_json_1.default.tokens.palette.text.text100,
                background: '#E4ECF1'
            },
            '&.MuiToggleButtonGroup-grouped': {
                '&:not(:first-of-type), &:not(:last-of-type)': {
                    borderTopLeftRadius: '3px',
                    borderTopRightRadius: '3px',
                    borderBottomRightRadius: '3px',
                    borderBottomLeftRadius: '3px',
                    '&.Mui-selected': {
                        borderTop: '1px solid #E4ECF1',
                        borderLeft: '1px solid #E4ECF1',
                        '& + .Mui-selected': {
                            borderLeft: '1px solid #E4ECF1',
                            marginLeft: 0
                        }
                    }
                },
                '&:not(:first-of-type)': {
                    marginLeft: 0,
                    '&.Mui-selected': {
                        '& + .Mui-selected': {
                            marginLeft: 0
                        }
                    }
                },
                '&:not(:last-of-type)': {
                    marginRight: 4
                }
            },
            '&.Mui-disabled': {
                border: 'none'
            },
            '&.Mui-selected': {
                border: '1px solid #E4ECF1',
                backgroundColor: `${base_tokens_json_1.default.tokens.palette.background.white} !important`,
                boxShadow: '0px 0px 1px 0px #EAECF024, 0px 1px 2px 0px #1D293914',
                '&:hover': {
                    color: theme.palette.primary.main
                }
            },
            '&.MuiToggleButtonGroup-groupedVertical': {
                '&:not(:last-of-type)': {
                    marginBottom: 8
                },
                marginRight: '0 !important'
            }
        }),
        sizeSmall: ({ theme }) => ({
            ...theme.typography.labelSm,
            paddingTop: `calc(${theme.spacing(1)} - 1px)`,
            paddingBottom: `calc(${theme.spacing(1)} - 1px)`,
            paddingLeft: 7,
            paddingRight: 7,
            '& .label': base_tokens_json_1.default.tokens.typography.label
        }),
        sizeMedium: ({ theme }) => ({
            paddingTop: `calc(${theme.spacing(1)} - 1px)`,
            paddingBottom: `calc(${theme.spacing(1)} - 1px)`,
            paddingLeft: 7,
            paddingRight: 7,
            ...theme.typography.label
        }),
        sizeLarge: ({ theme }) => ({
            ...theme.typography.labelLg,
            paddingTop: `calc(${theme.spacing(1)} - 1px)`,
            paddingBottom: `calc(${theme.spacing(1)} - 1px)`,
            paddingLeft: 7,
            paddingRight: 7,
            '& .label': base_tokens_json_1.default.tokens.typography.label
        })
    }
};
exports.MuiToggleButtonGroup = {
    styleOverrides: {
        root: ({ theme }) => ({
            paddingTop: theme.spacing(0.5),
            paddingBottom: theme.spacing(0.5),
            paddingLeft: 4,
            paddingRight: 4,
            background: '#F1F6F9',
            border: '1px solid #E4ECF1',
            borderRadius: '6px',
            '& .MuiToggleButtonGroup-grouped': {
                '&:not(:first-of-type), &:not(:last-of-type)': {
                    borderRadius: 3
                }
            }
        })
    }
};
